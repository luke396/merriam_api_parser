[project]
name = "merriam-api-parser"
version = "0.1.0"
description = "A parser for the Merriam-Webster API"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Zhengbo Wang", email = "lw7205675@gmail.com" }]
dependencies = [
  "black == 23.3.0",
  "mypy == 1.4.1",
  "pre-commit == 3.3.3",
  "pylint == 2.17.4",
  "pyright == 1.1.316",
  "pytest == 7.4.0",
  "pytest-asyncio == 0.21.0",
  "pytest-cov == 4.1.0",
  "pytest-mock == 3.11.1",
  "pyupgrade == 3.7.0",
  "requests == 2.31.0",
  "ruff == 0.0.276",
  "sourcery == 1.5.0",
  "types-requests == 2.31.0.1",
  "types-urllib3 == 1.26.25.13",
]
requires-python = ">=3.11"

[tool.ruff]
select = ["ALL"]
ignore = [
  # Will raise for untyped "self", this is not needed for the time being
  # https://github.com/charliermarsh/ruff/issues/1231#issuecomment-1350066198
  "ANN101",
  # use specific rule codes when ignoring type issues
  "PGH003", # Todo

  # Todo
  "TD002",
  "TD003",
  "FIX002",
]
line-length = 88
target-version = "py311"
fix = true
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"tests/*" = [
  "S101",   # use assert
  "SLF001", # private member accessed
  "D100",   # public module missing docstring
  "D103",   # public function missing docstring
  "ANN001", # missing function argument type annotation
  "ANN201", # missing return type annotation
  "E501",   # line too long
]

[tool.black]
target-version = ['py311']
required-version = '23.3.0'
exclude = '''
(
  \.venv
  | \.git
  | \.data
)
'''

[tool.mypy]
mypy_path = "merriam_api_parser"
files = ['merriam_api_parser']
python_version = "3.11"
warn_unused_configs = true
check_untyped_defs = true

[tool.pylint.messages_control]
max-line-length = 88
disable = [
  # Too strict
  "too-few-public-methods",
  "fixme",
  "redefined-outer-name",
  "protected-access",
  "invalid-name",

  # False positive
  "unsubscriptable-object",
  "import-error",

  # Caught by ruff
  "line-too-long",
  "missing-function-docstring",
  "broad-except",
  "missing-module-docstring",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--verbose"

[tool.coverage.run]
omit = ["main.py"]

[tool.pyright]
# https://github.com/pandas-dev/pandas/blob/0bc16da1e53e9a4d637cf81c770e6517da65a029/pyproject.toml#L591-L614
python_version = "3.11"
include = ["merriam_api_parser"]
exclude = ["tests"]
typeCheckingMode = "basic"
# enable subset of "strict"
reportDuplicateImport = true
reportInvalidStubStatement = true
reportOverlappingOverload = true
reportPropertyTypeMismatch = true
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = true
reportUntypedNamedTuple = true
reportUnusedImport = true
